{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jose\\\\OneDrive\\\\Desktop\\\\JS\\\\Mern-Shopping-List\\\\client\\\\src\\\\components\\\\ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { v1 as uuid } from 'uuid';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const {\n      items\n    } = this.props.item;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"dark\",\n        style: {\n          marginBottom: '2rem'\n        },\n        onClick: () => {\n          const name = prompt('Enter Item');\n\n          if (name) {\n            this.setState(state => ({\n              items: [...state.items, {\n                id: uuid(),\n                name\n              }]\n            }));\n          }\n        },\n        children: \" Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          className: \"shopping-list\",\n          children: items.map(({\n            id,\n            name\n          }) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n            timeout: 5000,\n            classNames: \"fade\",\n            children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"remove-btn\",\n                color: \"danger\",\n                size: \"sm\",\n                onClick: () => {\n                  this.setState(state => ({\n                    items: state.items.filter(item => item.id !== id)\n                  }));\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 41\n              }, this), name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nShoppingList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ShoppingList);","map":{"version":3,"sources":["C:/Users/Jose/OneDrive/Desktop/JS/Mern-Shopping-List/client/src/components/ShoppingList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","v1","uuid","connect","getItems","PropTypes","ShoppingList","componentDidMount","props","render","items","item","marginBottom","name","prompt","setState","state","id","map","filter","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,MAA7C,QAA2D,YAA3D;AACA,SAAQC,aAAR,EAAuBC,eAAvB,QAA6C,wBAA7C;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAEjCa,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,QAAX;AACH;;AAEDK,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAL,CAAWG,IAA7B;AACA,wBACI,QAAC,SAAD;AAAA,8BACI,QAAC,MAAD;AACA,QAAA,KAAK,EAAC,MADN;AAEA,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE;AAAf,SAFP;AAGA,QAAA,OAAO,EAAE,MAAM;AACX,gBAAMC,IAAI,GAAGC,MAAM,CAAC,YAAD,CAAnB;;AACA,cAAGD,IAAH,EAAQ;AACJ,iBAAKE,QAAL,CAAcC,KAAK,KAAK;AACpBN,cAAAA,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiB;AAACO,gBAAAA,EAAE,EAAEf,IAAI,EAAT;AAAaW,gBAAAA;AAAb,eAAjB;AADa,aAAL,CAAnB;AAGH;AACA,SAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYQ,QAAC,SAAD;AAAA,+BACI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,eAA3B;AAAA,oBACKH,KAAK,CAACQ,GAAN,CAAU,CAAC;AAACD,YAAAA,EAAD;AAAKJ,YAAAA;AAAL,WAAD,kBACP,QAAC,aAAD;AAAwB,YAAA,OAAO,EAAE,IAAjC;AAAuC,YAAA,UAAU,EAAC,MAAlD;AAAA,mCACI,QAAC,aAAD;AAAA,sCACI,QAAC,MAAD;AACA,gBAAA,SAAS,EAAC,YADV;AACuB,gBAAA,KAAK,EAAC,QAD7B;AACsC,gBAAA,IAAI,EAAC,IAD3C;AACgD,gBAAA,OAAO,EAAE,MAAM;AAC3D,uBAAKE,QAAL,CAAcC,KAAK,KAAK;AACpBN,oBAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYA,EAAvC;AADa,mBAAL,CAAnB;AAGH,iBALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAOKJ,IAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAoBI,EAApB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH;;AAzCgC;;AA4CrCX,YAAY,CAACc,SAAb,GAAyB;AACrBhB,EAAAA,QAAQ,EAAEC,SAAS,CAACgB,IAAV,CAAeC,UADJ;AAErBX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,MAAV,CAAiBD;AAFF,CAAzB;;AAKA,MAAME,eAAe,GAAGR,KAAK,KAAK;AAC9BL,EAAAA,IAAI,EAAEK,KAAK,CAACL;AADkB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,YAAvC,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport {v1 as uuid} from 'uuid';\r\nimport {connect } from 'react-redux';\r\nimport {getItems} from '../actions/itemActions';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass ShoppingList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItems();\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { items } = this.props.item;\r\n        return (\r\n            <Container>\r\n                <Button \r\n                color=\"dark\" \r\n                style={{marginBottom: '2rem'}}\r\n                onClick={() => { \r\n                    const name = prompt('Enter Item');\r\n                    if(name){\r\n                        this.setState(state => ({\r\n                            items: [...state.items, {id: uuid(), name}]\r\n                        }));\r\n                    }\r\n                    }}> Add Item</Button>\r\n                    <ListGroup>\r\n                        <TransitionGroup className=\"shopping-list\">\r\n                            {items.map(({id, name}) => (\r\n                                <CSSTransition key={id} timeout={5000} classNames=\"fade\">\r\n                                    <ListGroupItem>\r\n                                        <Button \r\n                                        className=\"remove-btn\" color=\"danger\" size=\"sm\" onClick={() => {\r\n                                            this.setState(state => ({\r\n                                                items: state.items.filter(item => item.id !== id)\r\n                                            }));\r\n                                        }}>&times;</Button>\r\n                                        {name}\r\n                                    </ListGroupItem>\r\n                                </CSSTransition>\r\n                            ))}\r\n                        </TransitionGroup>\r\n                    </ListGroup>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    item: state.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { getItems })(ShoppingList);"]},"metadata":{},"sourceType":"module"}